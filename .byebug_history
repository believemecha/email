c
InboundEmail.last.delete
InboundEmail.last
        InboundEmail.new(summary:summary, to_address: to_address,from_address: from_address,content:text,otp: otp,subject: subject,card_number: card_number,meta: params.except(:action,:controller,:home)).save
        from_address = params[:fromAddress]
        received_time = params[:receivedTime]
        to_address = params[:toAddress]
subject = params[:subject]
        otp = otp_match ? otp_match[1] : nil
        card_number = card_number_match ? card_number_match[1] : nil
        otp_match = text.match(/one-time passcode is (\d{6})/)
        card_number_match = text.match(/card ending in (\d{4})/)
        text = doc.text
        doc = Nokogiri::HTML(email_content)
        summary = params[:summary]
email_content = params[:html]
summary
n
c
InboundEmail.last
InboundEmail.last.card_number
InboundEmail.last.otp
InboundEmail.last
        InboundEmail.new(to_address: to_address,from_address: from_address,content:text,otp: otp,name: subject,card_number: card_number,meta: params.except(:action,:controller,:home)).save
InboundEmail.new(to_address: to_address,from_address: from_address,content:text,otp: otp,name: subject,card_number: card_number,meta: params.except(:action,:controller,:home))
InboundEmail
InboundEmail.new(to_address: to_address,from_address: from_address,content:text,otp: otp,subject: subject,card_number: card_number,meta: params.except(:action,:controller,:home))
        from_address = params[:fromAddress]
        received_time = params[:receivedTime]
        to_address = params[:toAddress]
        subject = params[:subject]
        otp = otp_match ? otp_match[1] : nil
  card_number = card_number_match ? card_number_match[1] : nil
        otp_match = text.match(/one-time passcode is (\d{6})/)
 card_number_match = text.match(/card ending in (\d{4})/)
        text = doc.text
        doc = Nokogiri::HTML(email_content)
        email_content = params[:html]
gem 'nokogiri'
email_content = params[:html]
params
